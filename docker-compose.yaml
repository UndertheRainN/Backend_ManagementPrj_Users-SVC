version: '3.2'

services:
  users-svc:
    build:
      context: '.'
    networks:
      - 'users-svc'
    ports:
      - '3001:3001'
    depends_on:
      - 'db'
      - 'cache'
    environment:
      NODE_ENV: 'production'
      DB_HOST: 'localhost'
      DB_PORT: '5432'
      DB_USERNAME: 'root'
      DB_PASSWORD: 'Aptech91@'
      DB_DATABASE: 'mysql'
      DB_SCHEMA: 'mono_user'
      DB_SYNC: true
      JWT_SECRET: 'hUf63zVVRZ1KTj7Yq2J2G2vAsH291UJWvdlbgH5DABI='
      SECURIRY: 'b3vFqTCJVJV4PnEZEG9Cgq6JW6xBEdqDUgBO6wcNpWQ='
      # REDIS_HOST: "cache"
      # REDIS_PORT: "6379"
    # healthcheck:
    #   test: ['CMD', '/bin/grpc_health_probe', '-addr=:50051']
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5
    # restart: 'on-failure'

  db:
    image: 'mysql'
    networks:
      - 'users-svc'
    expose:
      - '3306'
    environment:
      MYSQL_ROOT_PASSWORD: 'root'
      POSTGRES_PASSWORD: 'Aptech91@'
    # healthcheck:
    #   test: ['CMD-SHELL', "sh -c 'pg_isready -U postgres'"]
    #   interval: 30s
    #   timeout: 30s
    #   retries: 3
    restart: 'on-failure'

  cache:
    image: 'redis:5-alpine'
    networks:
      - 'users-svc'
    expose:
      - '6379'
    healthcheck:
      test: ['CMD-SHELL', "sh -c 'redis-cli PING'"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: 'on-failure'

networks:
  users-svc:
